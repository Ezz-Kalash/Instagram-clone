{"ast":null,"code":"var _jsxFileName = \"/Users/ezzkalash/Desktop/VS code/final/src/component/PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostForm({\n  onPost\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    caption: '',\n    imageUrl: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newPost = {\n      username: 'Ezz_kalash',\n      title: formData.title,\n      caption: formData.caption,\n      imageUrl: formData.imageUrl\n    };\n    onPost(newPost);\n    setFormData({\n      title: '',\n      caption: '',\n      imageUrl: ''\n    });\n  };\n  function handleFileUpload(input) {\n    const selectedFile = input.files[0]; // Get the selected file\n\n    if (selectedFile) {\n      const selectedImageElement = document.getElementById(\"selectedImage\");\n\n      // Create a FileReader to read the selected image file\n      const reader = new FileReader();\n\n      // Set up an event handler to run when the FileReader finishes reading the file\n      reader.onload = function (e) {\n        const imageUrl = e.target.result; // Get the base64-encoded image URL\n        selectedImageElement.src = imageUrl; // Set the image source\n        selectedImageElement.style.display = \"block\"; // Display the image\n      };\n\n      // Read the selected image file as a data URL\n      reader.readAsDataURL(selectedFile);\n    }\n  }\n  const [showPostForm, setShowPostForm] = useState(false);\n  const handlePost = newPost => {\n    onPost(newPost);\n    setShowPostForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          value: formData.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"caption\",\n          children: \"Caption:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"caption\",\n          name: \"caption\",\n          value: formData.caption,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUpload\",\n          children: \"Choose File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"imageUpload\",\n          name: \"imageUpload\",\n          accept: \"image/*\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: () => setShowPostForm(!showPostForm),\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"Isd+Gxq6eEyS2UPQeyh/Vu1i2r0=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","PostForm","onPost","_s","formData","setFormData","title","caption","imageUrl","handleChange","e","name","value","target","handleSubmit","preventDefault","newPost","username","handleFileUpload","input","selectedFile","files","selectedImageElement","document","getElementById","reader","FileReader","onload","result","src","style","display","readAsDataURL","showPostForm","setShowPostForm","handlePost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","accept","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/ezzkalash/Desktop/VS code/final/src/component/PostForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\n\nfunction PostForm({ onPost }) {\n  const [formData, setFormData] = useState({\n    title: '',\n    caption: '',\n    imageUrl: '',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newPost = {\n      username: 'Ezz_kalash',\n      title: formData.title,\n      caption: formData.caption,\n      imageUrl: formData.imageUrl,\n    };\n\n    onPost(newPost);\n\n    setFormData({\n      title: '',\n      caption: '',\n      imageUrl: '',\n    });\n  };\n  function handleFileUpload(input) {\n    const selectedFile = input.files[0]; // Get the selected file\n  \n    if (selectedFile) {\n      const selectedImageElement = document.getElementById(\"selectedImage\");\n  \n      // Create a FileReader to read the selected image file\n      const reader = new FileReader();\n  \n      // Set up an event handler to run when the FileReader finishes reading the file\n      reader.onload = function (e) {\n        const imageUrl = e.target.result; // Get the base64-encoded image URL\n        selectedImageElement.src = imageUrl; // Set the image source\n        selectedImageElement.style.display = \"block\"; // Display the image\n      };\n  \n      // Read the selected image file as a data URL\n      reader.readAsDataURL(selectedFile);\n    }\n  }\n  const [showPostForm, setShowPostForm] = useState(false);\n  const handlePost = (newPost) => {\n    onPost(newPost);\n    setShowPostForm(false);\n  };\n  \n  \n\n  return (\n    <div className=\"post-form\">\n      <h2>Create a New Post</h2>\n      <form onSubmit={handleSubmit}>\n        <div >\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={formData.title}\n            onChange={handleChange}\n          />\n        </div>\n        <div >\n          <label htmlFor=\"caption\">Caption:</label>\n          <textarea\n            id=\"caption\"\n            name=\"caption\"\n            value={formData.caption}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n  <label htmlFor=\"imageUpload\">Choose File:</label>\n  <input\n    type=\"file\"\n    id=\"imageUpload\"\n    name=\"imageUpload\"\n    accept=\"image/*\" \n    onChange={handleFileUpload} \n  />\n</div>\n\n<Button type='submit' variant=\"contained\" color=\"secondary\">Post</Button>\n\n<Button variant=\"contained\" color=\"error\" onClick={() => setShowPostForm(!showPostForm)}>Exit</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}